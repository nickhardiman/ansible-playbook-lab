---
# The "monitor" machine has one interface on the private libvirt network.
# It uses gateway as a web proxy.
# it hosts logging and metrics services

# prometheus and grafana
# https://github.com/cloudalchemy/ansible-prometheus
# https://galaxy.ansible.com/cloudalchemy/grafana
# https://github.com/cloudalchemy/ansible-grafana
# https://github.com/redhat-cop/tower_grafana_dashboards/blob/master/metric_tower.json
#
# prereqs
# dnf install python3-jmespath
# ansible-galaxy role install cloudalchemy.prometheus
# ansible-galaxy role install cloudalchemy.grafana
# ansible-galaxy collection install community.grafana
#
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_networking_infrastructure_services/providing-dhcp-services_networking-infrastructure-services#doc-wrapper

# Use a kickstart file to install and configure the OS.

- name: kickstart a new machine 
  hosts: monitor
  become: yes
  gather_facts: no
  serial: 1
  roles: 
  - name: "kickstart the VM on hypervisor {{ groups['hypervisor'][0] }}"
    role: nick.platform.libvirt_machine_kickstart
    delegate_to: "{{ groups['hypervisor'][0] }}"
  - name: "update /etc/hosts on install host {{ groups['install_host'][0] }}"
    role: nick.platform.hosts_record
    vars:
      ip_address: "{{ nics[0]['ip'] }}"
    delegate_to: "{{ groups['install_host'][0] }}"
  - name: "run machine (it stops after install)"
    role: nick.platform.libvirt_machine_start
    delegate_to: "{{ groups['install_host'][0] }}"


- name: configure new server machine
  hosts: monitor
  become: yes
  gather_facts: yes
  serial: 1
  vars_files:
  - vault-credentials.yml
  environment:
    http_proxy: http://gateway.lab.example.com:3128
    HTTPS_PROXY: http://gateway.lab.example.com:3128
    no_proxy: localhost,127.0.0.1,example.com
  roles:
  - nick.platform.managed_node
  - nick.platform.cdn_repo_consumer
  - nick.platform.latest_packages
  - nick.platform.server_cert
  - role: cloudalchemy.prometheus
    vars:
      prometheus_version: latest
  - role: cloudalchemy.grafana
    vars:
      grafana_security:
        admin_user: admin
        admin_password: redhat
      grafana_datasources:
        - name: prometheus
          type: prometheus
          access: proxy
          url: 'http://localhost:9090'
          basicAuth: false
  - nick.platform.elk_server

  tasks: 

# firewall
  # open port 9090 for prometheus
  # open port 3000 for grafana
  #
  - name: permit service traffic
    ansible.posix.firewalld:
      service: "{{ item }}"
      immediate: yes
      permanent: yes
      state: enabled
    loop: 
    - grafana
    - prometheus


# test 
# prometheus - no password
# curl http://monitor.lab.example.com:9090/
# grafana - admin/redhat (see grafana_security above)
# curl http://monitor.lab.example.com:3000/
# ELK - elastic API
# http://monitor.lab.example.com:9200/
# ELK - kibana
# http://monitor.lab.example.com:5601/


- name: keep image and config of the new machine
  hosts: monitor
  become: yes
  gather_facts: no
  serial: 1
  roles: 
  # create $FQDN-base.qcow2 image and $FQDN.xml config.
  # if the $FQDN-base.qcow2 file already exists, this role does not change anything. 
  - name: "copy the volume file and config, then delete the machine"
    role: nick.platform.libvirt_machine_image
    delegate_to: "{{ groups['hypervisor'][0] }}"
